[{"D:\\WebStorm\\project-management\\src\\index.tsx":"1","D:\\WebStorm\\project-management\\src\\pages\\Sidebar.tsx":"2","D:\\WebStorm\\project-management\\src\\pages\\auth\\Login.tsx":"3","D:\\WebStorm\\project-management\\src\\pages\\auth\\login.styles.tsx":"4","D:\\WebStorm\\project-management\\src\\contexts\\authContext.tsx":"5","D:\\WebStorm\\project-management\\src\\utils\\index.tsx":"6","D:\\WebStorm\\project-management\\src\\pages\\auth\\PrivateRoute.tsx":"7","D:\\WebStorm\\project-management\\src\\contexts\\projectContext.tsx":"8","D:\\WebStorm\\project-management\\src\\pages\\projects\\ProjectsHome.tsx":"9","D:\\WebStorm\\project-management\\src\\pages\\projects\\CreateProject.tsx":"10","D:\\WebStorm\\project-management\\src\\pages\\projects\\UserProjects.tsx":"11","D:\\WebStorm\\project-management\\src\\contexts\\worskspaceContext.tsx":"12","D:\\WebStorm\\project-management\\src\\pages\\projects\\project.styles.tsx":"13","D:\\WebStorm\\project-management\\src\\pages\\workspace\\SingleWorkspace.tsx":"14"},{"size":693,"mtime":1608022490526,"results":"15","hashOfConfig":"16"},{"size":5285,"mtime":1608027662414,"results":"17","hashOfConfig":"16"},{"size":3368,"mtime":1607954308337,"results":"18","hashOfConfig":"16"},{"size":152,"mtime":1607928373611,"results":"19","hashOfConfig":"16"},{"size":3077,"mtime":1607952961752,"results":"20","hashOfConfig":"16"},{"size":1297,"mtime":1608028316738,"results":"21","hashOfConfig":"16"},{"size":469,"mtime":1607936422408,"results":"22","hashOfConfig":"16"},{"size":3490,"mtime":1608019222001,"results":"23","hashOfConfig":"16"},{"size":2580,"mtime":1608012080819,"results":"24","hashOfConfig":"16"},{"size":5639,"mtime":1608014963460,"results":"25","hashOfConfig":"16"},{"size":2944,"mtime":1608020183068,"results":"26","hashOfConfig":"16"},{"size":1369,"mtime":1608028733988,"results":"27","hashOfConfig":"16"},{"size":136,"mtime":1607951213933,"results":"28","hashOfConfig":"16"},{"size":3356,"mtime":1608029401121,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"197riw5",{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebStorm\\project-management\\src\\index.tsx",["62"],"D:\\WebStorm\\project-management\\src\\pages\\Sidebar.tsx",["63","64","65","66","67","68"],"D:\\WebStorm\\project-management\\src\\pages\\auth\\Login.tsx",["69","70","71","72"],"D:\\WebStorm\\project-management\\src\\pages\\auth\\login.styles.tsx",[],"D:\\WebStorm\\project-management\\src\\contexts\\authContext.tsx",[],"D:\\WebStorm\\project-management\\src\\utils\\index.tsx",["73","74","75"],"D:\\WebStorm\\project-management\\src\\pages\\auth\\PrivateRoute.tsx",[],["76","77"],"D:\\WebStorm\\project-management\\src\\contexts\\projectContext.tsx",[],"D:\\WebStorm\\project-management\\src\\pages\\projects\\ProjectsHome.tsx",["78","79","80","81"],"import React, {useMemo} from 'react';\r\nimport {useProjectContext} from \"../../contexts/projectContext\";\r\nimport { Divider, PageHeader, Button, Descriptions,  Avatar, Image } from 'antd';\r\nimport {ProjectWrapper} from \"./project.styles\";\r\n\r\nconst ProjectsHome = () =>{\r\n    const{state, dispatch} = useProjectContext();\r\n\r\n    const renderProjects = useMemo(()=> {\r\n        return state.projects.map((project)=> {\r\n            return(\r\n                <ProjectWrapper>\r\n                    <PageHeader\r\n                        key={project.id}\r\n                        ghost={false}\r\n                        title={project.name}\r\n                        extra={[\r\n                            <Button key=\"1\" type=\"primary\">\r\n                                Reviews\r\n                            </Button>,\r\n                        ]}\r\n                    >\r\n                        <Descriptions size=\"small\" column={3}>\r\n                            <Descriptions.Item label=\"Created By\">{project.createdBy}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"id\">\r\n                                <a>{project.id}</a>\r\n                            </Descriptions.Item>\r\n                            <Descriptions.Item label=\"Creation Time\">{new Date(project.createdAt).toLocaleDateString()}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Effective Time\">{new Date(project.createdAt).toLocaleDateString()}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Tech stack\">{\r\n                                project.tech.map((tech: any)=> {\r\n                                    return tech + \" \"\r\n                                })\r\n                            }</Descriptions.Item>\r\n\r\n                            <Descriptions.Item label=\"Team\">\r\n                                {project.team.map((member: any)=> {\r\n                                    return (\r\n                                        <Avatar>{member.username.substr(0,1).toUpperCase()}</Avatar>\r\n                                    )\r\n                                })}\r\n                            </Descriptions.Item>\r\n\r\n                            <Descriptions.Item label=\"Description\">{project.description}</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </PageHeader>\r\n                </ProjectWrapper>\r\n\r\n            )\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Divider>Projects</Divider>\r\n            {renderProjects}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectsHome;","D:\\WebStorm\\project-management\\src\\pages\\projects\\CreateProject.tsx",["82","83","84","85","86","87"],"import React, {useCallback, useMemo, useState} from 'react';\r\nimport {Button, Col, Divider, Form, Input, Row, Select } from \"antd\";\r\nimport {useAuthContext} from \"../../contexts/authContext\";\r\nimport {getAuthenticatedUser} from \"../../utils\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {useProjectContext} from \"../../contexts/projectContext\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst CreateProject = () => {\r\n    const {state, dispatch} = useAuthContext();\r\n    const {state: projectState, dispatch: projectDispatch} = useProjectContext();\r\n    const [stateValue, setStateValue] = useState({name: '', description: '', tech: '', team1_res: '', team2_res: ''})\r\n    const [team1, setSTeam1] = useState('')\r\n    const [team2, setSTeam2] = useState('')\r\n\r\n\r\n    const handleSubmit = useCallback(()=> {\r\n        projectDispatch({type: 'CREATE_PROJECT', payload: {name: stateValue.name, description: stateValue.description, tech: stateValue.tech, team1, team2 , users: state.users}})\r\n    }, [stateValue, team1, team2])\r\n\r\n    const handleChange = useCallback( (e:any) => {\r\n        const value = e.target.value;\r\n        setStateValue({\r\n            ...stateValue,\r\n            [e.target.name]: value\r\n        });\r\n    }, [stateValue])\r\n\r\n    const handleTeam1Change = useCallback( (value: string) => {\r\n        setSTeam1(value);\r\n    },[team1])\r\n\r\n    const handleTeam2Change = useCallback((value: string) => {\r\n        setSTeam2(value)\r\n    },[team2])\r\n\r\n    const team = useMemo(()=> (\r\n            state.users?.map((user)=> {\r\n              return (\r\n                  <Option value={user.id}>{user.username}</Option>\r\n              )\r\n            })\r\n\r\n    ), [state.users])\r\n\r\n    return (\r\n        <div>\r\n            {getAuthenticatedUser().role !== 'Manager' && <Redirect to={'/'}/>}\r\n            <Divider orientation=\"left\">Create</Divider>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col className=\"gutter-row\" span={6}>\r\n\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={12}>\r\n\r\n                    <form>\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"title\">Project Name</label>\r\n                            <Input placeholder=\"Enter Article Title\" name= \"name\" value={stateValue.name} onChange={handleChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"body\">Description</label>\r\n                            <TextArea\r\n                                name=\"description\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"Brief project overview\"\r\n                                value={stateValue.description}\r\n                                autoSize={{ minRows: 5 }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"Tech Stack\">Tech Satck</label>\r\n                            <Input placeholder=\"Comma seperated tech\" name= \"tech\" value={stateValue.tech} onChange={handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label className={\"mr-2\"} htmlFor=\"Team1\">Team 1</label>\r\n                            <Select  style={{ width: 200 }} onChange={handleTeam1Change}>\r\n                                {team}\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"body\">Team 1 Responsibilities</label>\r\n                            <TextArea\r\n                                name=\"team1_res\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"Team 1 Responsibilities\"\r\n                                value={stateValue.team1_res}\r\n                                autoSize={{ minRows: 5 }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label className={\"mr-2\"} htmlFor=\"Team2\">Team 2</label>\r\n                            <Select  style={{ width: 200 }} onChange={handleTeam2Change}>\r\n                                {team}\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"body\">Team 2 Responsibilities</label>\r\n                            <TextArea\r\n                                name=\"team2_res\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"Team 2 Responsibilities\"\r\n                                value={stateValue.team2_res}\r\n                                autoSize={{ minRows: 5 }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={\"form-group col-md-12\"}>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                type={\"primary\"}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={6}>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProject;","D:\\WebStorm\\project-management\\src\\pages\\projects\\UserProjects.tsx",["88","89"],"import React, {useEffect, useMemo} from 'react';\r\nimport {useProjectContext} from \"../../contexts/projectContext\";\r\nimport {getAuthenticatedUser} from \"../../utils\";\r\nimport {ProjectWrapper} from \"./project.styles\";\r\nimport {Avatar, Button, Descriptions, PageHeader} from \"antd\";\r\n\r\nconst UserProjects = () => {\r\n    const {state, dispatch} = useProjectContext();\r\n    const user = getAuthenticatedUser();\r\n    useEffect(()=> {\r\n        dispatch({type: 'USER_PROJECTS', payload: user.id})\r\n    },[])\r\n\r\n    const renderProjects = useMemo(()=> {\r\n        if(state.userProjects){\r\n            return state.userProjects.map((project)=> {\r\n                return(\r\n                    <ProjectWrapper>\r\n                        <PageHeader\r\n                            key={project.id}\r\n                            ghost={false}\r\n                            title={project.name}\r\n                            extra={[\r\n                                <Button key=\"1\" type=\"primary\">\r\n                                    Reviews\r\n                                </Button>,\r\n                            ]}\r\n                        >\r\n                            <Descriptions size=\"small\" column={3}>\r\n                                <Descriptions.Item label=\"Created By\">{project.createdBy}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"id\">\r\n                                    <a>{project.id}</a>\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"Creation Time\">{new Date(project.createdAt).toLocaleDateString()}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Effective Time\">{new Date(project.createdAt).toLocaleDateString()}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Tech stack\">{\r\n                                    project.tech.map((tech: any)=> {\r\n                                        return tech + \" \"\r\n                                    })\r\n                                }</Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Team\">\r\n                                    {project.team.map((member: any)=> {\r\n                                        return (\r\n                                            <Avatar>{member.username.substr(0,1).toUpperCase()}</Avatar>\r\n                                        )\r\n                                    })}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Description\">{project.description}</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </PageHeader>\r\n                    </ProjectWrapper>\r\n\r\n                )\r\n            })\r\n        }\r\n\r\n    }, [state.userProjects])\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {renderProjects}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProjects;","D:\\WebStorm\\project-management\\src\\contexts\\worskspaceContext.tsx",[],"D:\\WebStorm\\project-management\\src\\pages\\projects\\project.styles.tsx",[],"D:\\WebStorm\\project-management\\src\\pages\\workspace\\SingleWorkspace.tsx",["90","91","92","93","94","95"],{"ruleId":"96","severity":1,"message":"97","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":11},{"ruleId":"96","severity":1,"message":"100","line":1,"column":38,"nodeType":"98","messageId":"99","endLine":1,"endColumn":46},{"ruleId":"101","severity":1,"message":"102","line":25,"column":8,"nodeType":"103","endLine":25,"endColumn":17,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":30,"column":8,"nodeType":"103","endLine":30,"endColumn":14,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"102","line":34,"column":8,"nodeType":"103","endLine":34,"endColumn":17,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"108","line":44,"column":8,"nodeType":"103","endLine":44,"endColumn":15,"suggestions":"109"},{"ruleId":"101","severity":1,"message":"110","line":73,"column":8,"nodeType":"103","endLine":73,"endColumn":23,"suggestions":"111"},{"ruleId":"101","severity":1,"message":"112","line":25,"column":8,"nodeType":"103","endLine":25,"endColumn":40,"suggestions":"113"},{"ruleId":"101","severity":1,"message":"108","line":30,"column":8,"nodeType":"103","endLine":30,"endColumn":40,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"108","line":39,"column":11,"nodeType":"103","endLine":39,"endColumn":27,"suggestions":"115"},{"ruleId":"101","severity":1,"message":"108","line":47,"column":11,"nodeType":"103","endLine":47,"endColumn":27,"suggestions":"116"},{"ruleId":"96","severity":1,"message":"117","line":1,"column":24,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":35,"column":65,"nodeType":"120","messageId":"121","endLine":35,"endColumn":67},{"ruleId":"118","severity":1,"message":"119","line":39,"column":81,"nodeType":"120","messageId":"121","endLine":39,"endColumn":83},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"96","severity":1,"message":"126","line":3,"column":62,"nodeType":"98","messageId":"99","endLine":3,"endColumn":67},{"ruleId":"96","severity":1,"message":"127","line":7,"column":18,"nodeType":"98","messageId":"99","endLine":7,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":26,"column":33,"nodeType":"130","endLine":26,"endColumn":36},{"ruleId":"101","severity":1,"message":"131","line":51,"column":8,"nodeType":"103","endLine":51,"endColumn":10,"suggestions":"132"},{"ruleId":"96","severity":1,"message":"133","line":2,"column":31,"nodeType":"98","messageId":"99","endLine":2,"endColumn":35},{"ruleId":"96","severity":1,"message":"127","line":10,"column":19,"nodeType":"98","messageId":"99","endLine":10,"endColumn":27},{"ruleId":"96","severity":1,"message":"134","line":11,"column":19,"nodeType":"98","messageId":"99","endLine":11,"endColumn":31},{"ruleId":"101","severity":1,"message":"135","line":19,"column":8,"nodeType":"103","endLine":19,"endColumn":34,"suggestions":"136"},{"ruleId":"101","severity":1,"message":"137","line":31,"column":7,"nodeType":"103","endLine":31,"endColumn":14,"suggestions":"138"},{"ruleId":"101","severity":1,"message":"139","line":35,"column":7,"nodeType":"103","endLine":35,"endColumn":14,"suggestions":"140"},{"ruleId":"101","severity":1,"message":"141","line":12,"column":7,"nodeType":"103","endLine":12,"endColumn":9,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"129","line":32,"column":37,"nodeType":"130","endLine":32,"endColumn":40},{"ruleId":"96","severity":1,"message":"143","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"144","line":7,"column":9,"nodeType":"98","messageId":"99","endLine":7,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":18,"column":51,"nodeType":"147","messageId":"148","endLine":18,"endColumn":53},{"ruleId":"118","severity":1,"message":"119","line":19,"column":79,"nodeType":"120","messageId":"121","endLine":19,"endColumn":81},{"ruleId":"128","severity":1,"message":"129","line":36,"column":37,"nodeType":"130","endLine":36,"endColumn":40},{"ruleId":"101","severity":1,"message":"149","line":62,"column":7,"nodeType":"103","endLine":62,"endColumn":18,"suggestions":"150"},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'visible'. Either exclude it or remove the dependency array.","ArrayExpression",["151"],"React Hook useCallback has a missing dependency: 'workspaceDispatch'. Either include it or remove the dependency array.",["152"],["153"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["154"],"React Hook useMemo has missing dependencies: 'handleCancel', 'handleName', and 'handleOk'. Either include them or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["156"],["157"],["158"],["159"],"'projectState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'Image' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useMemo has a missing dependency: 'state.projects'. Either include it or remove the dependency array.",["162"],"'Form' is defined but never used.","'projectState' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'projectDispatch' and 'state.users'. Either include them or remove the dependency array.",["163"],"React Hook useCallback has an unnecessary dependency: 'team1'. Either exclude it or remove the dependency array.",["164"],"React Hook useCallback has an unnecessary dependency: 'team2'. Either exclude it or remove the dependency array.",["165"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.id'. Either include them or remove the dependency array.",["166"],"'useEffect' is defined but never used.","'projectObject' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useMemo has a missing dependency: 'projectState.projects'. Either include it or remove the dependency array.",["167"],{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"168","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"173","fix":"181"},{"desc":"173","fix":"182"},"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"168","fix":"187"},{"desc":"168","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: []",{"range":"193","text":"194"},"Update the dependencies array to be: [name, workspaceDispatch]",{"range":"195","text":"196"},{"range":"197","text":"194"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},"Update the dependencies array to be: [handleCancel, handleName, handleOk, visible]",{"range":"200","text":"201"},"Update the dependencies array to be: [state.username, state.password, dispatch]",{"range":"202","text":"203"},"Update the dependencies array to be: [dispatch, state.username, state.password]",{"range":"204","text":"205"},{"range":"206","text":"199"},{"range":"207","text":"199"},"Update the dependencies array to be: [state.projects]",{"range":"208","text":"209"},"Update the dependencies array to be: [projectDispatch, state.users, stateValue.description, stateValue.name, stateValue.tech, team1, team2]",{"range":"210","text":"211"},{"range":"212","text":"194"},{"range":"213","text":"194"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"214","text":"215"},"Update the dependencies array to be: [projectState.projects, workspace.projects]",{"range":"216","text":"217"},[1126,1135],"[]",[1293,1299],"[name, workspaceDispatch]",[1386,1395],[1621,1628],"[dispatch]",[2559,2574],"[handleCancel, handleName, handleOk, visible]",[804,836],"[state.username, state.password, dispatch]",[995,1027],"[dispatch, state.username, state.password]",[1281,1297],[1549,1565],[2416,2418],"[state.projects]",[1021,1047],"[projectDispatch, state.users, stateValue.description, stateValue.name, stateValue.tech, team1, team2]",[1367,1374],[1475,1482],[496,498],"[dispatch, user.id]",[3161,3172],"[projectState.projects, workspace.projects]"]